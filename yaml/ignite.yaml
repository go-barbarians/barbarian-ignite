apiVersion: v1
kind: Service
metadata:
  name: ignite-cs
  labels:
    app: ignite
spec:
  ports:
  - port: 10500
    name: server
  selector:
    app: ignite
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ignite-pdb
spec:
  selector:
    matchLabels:
      app: ignite
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ignite
spec:
  selector:
    matchLabels:
      app: ignite
  serviceName: ignite-cs
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: ignite
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - ignite
              topologyKey: "kubernetes.io/hostname"
      containers:
      - image: 535272059665.dkr.ecr.eu-west-1.amazonaws.com/ignite
        name: ignite
        volumeMounts:
        - mountPath: /ignite/config
          name: igfs-cfg-volume
        - mountPath: /etc/init
          name: init-cfg-volume
        resources:
          requests:
            memory: "5Gi"
            cpu: "0.5"
        ports:
        - containerPort: 10500
          name: server
        command:
        - sh
        - -c
        - "/ignite/bin/start-ignite \
          --conf_dir=/ignite/config \
          --server_port=10500 \
          --log_level=INFO \
          --zk_service=zk-cs.default.svc.cluster.local:2181"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/ignite/bin/ignite-ready 10500"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "/ignite/bin/ignite-ready 10500"
          initialDelaySeconds: 10
          timeoutSeconds: 5
      initContainers:
      - name: install-aws-sh
        image: busybox
        command:
        - wget
        - "-O"
        - "/init/aws.sh"
        - http://internal-barbarian-config-119679307.eu-west-1.elb.amazonaws.com/ignite/init/aws.sh
        volumeMounts:
        - name: init-cfg-volume
          mountPath: "/init"
      volumes:
      - name: igfs-cfg-volume
        emptyDir: {}
      - name: init-cfg-volume
        emptyDir: {}
